// /* eslint-disable react-refresh/only-export-components */
// /* eslint-disable @typescript-eslint/no-explicit-any */
// import React, { createContext, useContext, useState ,ReactNode, useEffect } from "react";

// interface AuthContextProps {
//    // user: null | string; // Change 'any' to the actual user type if possible
//     SignIn: (user: any) => void; // Change 'any' to the actual user type if possible
//     SignOut: () => void;
//     signedIn:boolean;
//     setSignedIn:React.Dispatch<React.SetStateAction<boolean>>;
    
    
//   }
// const AuthContext = createContext<AuthContextProps | null>(null);

// export const AuthProvider = ({ children }: { children: ReactNode }) => {
//     //const [user, setUser] = useState<null | any>(null); // Change 'any' to the actual user type if possible
//     const [signedIn, setSignedIn] = useState(false);

//       const checkSignIn = async () => {
//     const storedUser = localStorage.getItem("isSignIn") || ''; // Use empty string as default
//     // console.log('Stored user in ml:', storedUser);  
//     setSignedIn(!!storedUser);
//       };
  


//     useEffect(()=>{
//       const storedUser = localStorage.getItem("isSignIn");
//       console.log('Stored user in uf in auth:', storedUser);  
//         setSignedIn(!!(storedUser && JSON.parse(storedUser)));
//        checkSignIn();
//   },[]);
    
//     const SignIn = (formData:any) => {
//         localStorage.setItem("isSignIn", JSON.stringify(formData));
//         setSignedIn(true);
//     };
    
//     const SignOut = () => {
//          localStorage.removeItem("isSignIn");
//         //   navigate("/");
//         setSignedIn(false);
        
//     };
  

//     const valuesNew:AuthContextProps = {
//       SignIn,
//        SignOut,
//        signedIn,
//        setSignedIn

//     };

//     return (
//       <AuthContext.Provider value={valuesNew}>
//         {children}
//       </AuthContext.Provider>
//     );
// };
// export const useAuth = () => {
//   const context = useContext(AuthContext);
//   if (!context) {
//     throw new Error('useAuth must be used within an AuthProvider');
//   }
//   return context;
// };


// /* eslint-disable @typescript-eslint/no-explicit-any */
// import { useAuth } from "./Auth"
// import { Navigate } from "react-router-dom";

// // interface RequiredAuthProps{
// //   path:string;
// //   children?:React.ReactNode;
// // }

// const RequireAuth= ({ path ,children }: any)=> {
//     // const location =useLocation();

//     const {signedIn}=useAuth();

//   return signedIn?(
    
//     children
    
    
//     ):(
//       <Navigate to='/SignIn' replace={true} state={{from:path}}/>
//       );
    

// };

// export default RequireAuth;


// // const [signedIn, setSignedIn] = useState(false);
//   // const { SignOut,signedIn} =useAuth();
//   // console.log('Auth Object:', auth);
//   const navigate = useNavigate();
  
//   // const checkSignIn = async () => {
//   //   const storedUser = localStorage.getItem("isSignIn") || ''; // Use empty string as default
//   //   // console.log('Stored user in ml:', storedUser);  
//   //   setSignedIn(!!storedUser);
//   //     };
      
//       // const handleSignOutClick = () => {
//         //  localStorage.removeItem("isSignIn");
        
//         //   navigate("/");
//   // };
// const handleSignOut =()=>{

//   // SignOut();
//   navigate("/");
//   // if(auth){
//   //   auth.SignOut();
//   //   navigate('/');
//   //  localStorage.
//   //  ("isSignIn");

//   // }
// };
// // useEffect(() => {
// //   checkSignIn();
// // }, []);



//   // const checkSignIn = async () => {
//   //   const storedUser = localStorage.getItem("isSignIn") || ''; // Use empty string as default
//   //   // console.log('Stored user in ml:', storedUser);  
//   //   setSignedIn(!!storedUser);
//   //     };
  

//   //     useEffect(()=>{
//   //       checkSignIn

//   //     },[]);


//   const { setSignedIn, SignIn} =useAuth();
 
//   const handleSignIn = async () => {
//     try {
//       const result = await userServices().getRegisteredUsers();
//       let emailFound = false;

//       await Promise.all(result.data.map(async (RegisteredUsers: any) => {
//         if (RegisteredUsers.email === formData.email) {
//           emailFound = true;
//           if (RegisteredUsers.password === formData.password) {
//             console.log("formdaata p",formData.password)
//             //localStorage.setItem("isSignIn", JSON.stringify(formData.email));
//             console.log("formdaata e",formData.email)
//             const lll:string = formData.email
//               SignIn(lll); 
//               setSignedIn(true);// Assuming your SignIn function sets the user in the auth context
//             console.log(formData)
//             alert('Sign In Successful');
//             navigate('/ForArtists'); // Redirect to the desired page
//           } else {
//             setValidationErrors((prevErrors) => ({
//               ...prevErrors,
//               password: 'Wrong Password',
//             }));
//           }
//         }
//       }));